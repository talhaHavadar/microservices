// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/keygen.proto

package keygen

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type KeygenRequest struct {
	Longurl              string   `protobuf:"bytes,1,opt,name=longurl,proto3" json:"longurl,omitempty"`
	Seed                 string   `protobuf:"bytes,2,opt,name=seed,proto3" json:"seed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeygenRequest) Reset()         { *m = KeygenRequest{} }
func (m *KeygenRequest) String() string { return proto.CompactTextString(m) }
func (*KeygenRequest) ProtoMessage()    {}
func (*KeygenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b82e9a7ba0b7d09, []int{0}
}

func (m *KeygenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeygenRequest.Unmarshal(m, b)
}
func (m *KeygenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeygenRequest.Marshal(b, m, deterministic)
}
func (m *KeygenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeygenRequest.Merge(m, src)
}
func (m *KeygenRequest) XXX_Size() int {
	return xxx_messageInfo_KeygenRequest.Size(m)
}
func (m *KeygenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KeygenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KeygenRequest proto.InternalMessageInfo

func (m *KeygenRequest) GetLongurl() string {
	if m != nil {
		return m.Longurl
	}
	return ""
}

func (m *KeygenRequest) GetSeed() string {
	if m != nil {
		return m.Seed
	}
	return ""
}

type KeygenResponse struct {
	Shorturl             string   `protobuf:"bytes,1,opt,name=shorturl,proto3" json:"shorturl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeygenResponse) Reset()         { *m = KeygenResponse{} }
func (m *KeygenResponse) String() string { return proto.CompactTextString(m) }
func (*KeygenResponse) ProtoMessage()    {}
func (*KeygenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b82e9a7ba0b7d09, []int{1}
}

func (m *KeygenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeygenResponse.Unmarshal(m, b)
}
func (m *KeygenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeygenResponse.Marshal(b, m, deterministic)
}
func (m *KeygenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeygenResponse.Merge(m, src)
}
func (m *KeygenResponse) XXX_Size() int {
	return xxx_messageInfo_KeygenResponse.Size(m)
}
func (m *KeygenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_KeygenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_KeygenResponse proto.InternalMessageInfo

func (m *KeygenResponse) GetShorturl() string {
	if m != nil {
		return m.Shorturl
	}
	return ""
}

func init() {
	proto.RegisterType((*KeygenRequest)(nil), "KeygenRequest")
	proto.RegisterType((*KeygenResponse)(nil), "KeygenResponse")
}

func init() { proto.RegisterFile("proto/keygen.proto", fileDescriptor_2b82e9a7ba0b7d09) }

var fileDescriptor_2b82e9a7ba0b7d09 = []byte{
	// 152 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0xcf, 0x4e, 0xad, 0x4c, 0x4f, 0xcd, 0xd3, 0x03, 0x73, 0x94, 0x6c, 0xb9, 0x78, 0xbd,
	0xc1, 0xfc, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x09, 0x2e, 0xf6, 0x9c, 0xfc, 0xbc,
	0xf4, 0xd2, 0xa2, 0x1c, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x18, 0x57, 0x48, 0x88, 0x8b,
	0xa5, 0x38, 0x35, 0x35, 0x45, 0x82, 0x09, 0x2c, 0x0c, 0x66, 0x2b, 0xe9, 0x70, 0xf1, 0xc1, 0xb4,
	0x17, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0x49, 0x71, 0x71, 0x14, 0x67, 0xe4, 0x17, 0x95, 0x20,
	0x0c, 0x80, 0xf3, 0x8d, 0x6c, 0x60, 0x96, 0x05, 0xa7, 0x16, 0x95, 0x65, 0x26, 0xa7, 0x0a, 0x69,
	0x73, 0x71, 0xb8, 0xa7, 0xe6, 0xa5, 0x16, 0x25, 0x96, 0xa4, 0x0a, 0xf1, 0xe9, 0xa1, 0x38, 0x44,
	0x8a, 0x5f, 0x0f, 0xd5, 0xe4, 0x24, 0x36, 0xb0, 0x8b, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x0f, 0x58, 0x80, 0x46, 0xc7, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// KeygenServiceClient is the client API for KeygenService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KeygenServiceClient interface {
	Generate(ctx context.Context, in *KeygenRequest, opts ...grpc.CallOption) (*KeygenResponse, error)
}

type keygenServiceClient struct {
	cc *grpc.ClientConn
}

func NewKeygenServiceClient(cc *grpc.ClientConn) KeygenServiceClient {
	return &keygenServiceClient{cc}
}

func (c *keygenServiceClient) Generate(ctx context.Context, in *KeygenRequest, opts ...grpc.CallOption) (*KeygenResponse, error) {
	out := new(KeygenResponse)
	err := c.cc.Invoke(ctx, "/KeygenService/Generate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KeygenServiceServer is the server API for KeygenService service.
type KeygenServiceServer interface {
	Generate(context.Context, *KeygenRequest) (*KeygenResponse, error)
}

// UnimplementedKeygenServiceServer can be embedded to have forward compatible implementations.
type UnimplementedKeygenServiceServer struct {
}

func (*UnimplementedKeygenServiceServer) Generate(ctx context.Context, req *KeygenRequest) (*KeygenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Generate not implemented")
}

func RegisterKeygenServiceServer(s *grpc.Server, srv KeygenServiceServer) {
	s.RegisterService(&_KeygenService_serviceDesc, srv)
}

func _KeygenService_Generate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeygenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeygenServiceServer).Generate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/KeygenService/Generate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeygenServiceServer).Generate(ctx, req.(*KeygenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _KeygenService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "KeygenService",
	HandlerType: (*KeygenServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Generate",
			Handler:    _KeygenService_Generate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/keygen.proto",
}
